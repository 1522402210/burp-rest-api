buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

final def extensionName = 'burp-rest-api'
version = '1.0.4'

def updateVersion() {
    def configFile = new File('src/main/resources/application.yml')
    println "Updating version to '${version}' in ${configFile}"
    String configContent = configFile.getText('UTF-8')
    configContent = configContent.replaceAll(/build\.version: .*/, "build.version: ${version}")
    configFile.write(configContent, 'UTF-8')
}

allprojects {
    //Display warning
    println " !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
    println " !! Make sure that no other Burp instances are running !!"
    println " !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"

    //Update version in application file
    updateVersion()
}

jar {
    baseName = extensionName
    manifest {
        attributes 'Implementation-Title': 'Burp REST API',
                'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
File schemaTargetDir = new File('build/generated-schema')

configurations {
  jaxb
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile fileTree(dir: 'lib', include: '**/*.jar')
    compile "io.springfox:springfox-swagger2:2.+"
    compile "io.springfox:springfox-swagger-ui:2.+"
    
    compile name: 'burpsuite_pro'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.apache.httpcomponents:httpclient:4.5.2')

    jaxb 'org.glassfish.jaxb:jaxb-jxc:2.+'
	jaxb 'org.glassfish.jaxb:jaxb-xjc:2.+'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

task createschemaTargetDir () {
	schemaTargetDir.mkdirs()
}

bootRun {
    // support passing -Dsystem.property=value to bootRun task
    systemProperties = System.properties

    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug',
                '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'
    }
}

task extractApi(type: Copy) {
	from(zipTree('build/libs/' + extensionName + '-' + version + '.jar'))
	into 'build/libs'
}

task schemagen () {
	doLast {
		ant.taskdef(name: 'schemagen', classname: 'com.sun.tools.jxc.SchemaGenTask', classpath: configurations.jaxb.asPath)

		ant.schemagen(
			srcdir:'src/main/java/com/vmware/burp/extension/domain',
			destdir:schemaTargetDir,
			includeAntRuntime:'false'
		){
			classpath {
				fileset(dir: 'build/libs', includes: '**/*.jar')
			}
		}
	}
}

compileJava.dependsOn createschemaTargetDir
schemagen.dependsOn extractApi
